{"version":3,"sources":["reportWebVitals.js","Card.js","cardarray.js","Searchbox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","card","id","username","email","className","alt","src","CardArray","robots","map","user","i","Card","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredrobots","this","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCOCQ,EAVF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,MAC5B,OACC,sBAAKC,UAAY,oDAAjB,UACC,qBAAKC,IAAM,QAAQC,IAAG,+BAA2BL,EAA3B,cACtB,6BAAKC,IACL,4BAAIC,IACJ,4BAAIF,QCeQM,EArBG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAACC,EAAD,CAECX,GAAMS,EAAKT,GACXC,SAAYQ,EAAKR,SACjBC,MAASO,EAAKP,OAHTQ,SCCIE,EAVE,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACA,uBAAOY,KAAK,SAASC,YAAY,cAAcb,UAAU,sCACxDc,SAAUH,OCUEI,EAdA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YC8CKC,E,kDA1Cd,aAAe,IAAD,8BACb,gBAeFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAfzC,EAAKC,MAAQ,CACZxB,OAAQ,GACRM,YAAa,IAJD,E,gEASK,IAAD,OAClBmB,MAAM,8CACJvC,MAAM,SAAAwC,GAAQ,OAAIA,EAASC,UAC3BzC,MAAM,SAAA0C,GAAK,OAAI,EAAKP,SAAS,CAAErB,OAAQ4B,S,+BAchC,IAAD,OACFC,EAAiBC,KAAKN,MAAMxB,OAAO+B,QAAO,SAAA/B,GAChD,OAAOA,EAAON,SAASsC,cAAcC,SAAS,EAAKT,MAAMlB,YAAY0B,kBAErE,OACC,sBAAKpC,UAAY,KAAjB,UACC,0CACA,cAAC,EAAD,CAAWW,aAAgBuB,KAAKX,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAWnB,OAAQ6B,a,GApCLK,aCGlBC,IAASC,OAAQ,cAAE,EAAF,IACfC,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.ab550888.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//explains structure of a card component\r\n\r\nimport React from 'react';\r\n//import { robots } from './Robots';\r\nconst card = ({id, username, email}) =>{\r\n\treturn (\r\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n\t\t\t<img alt = \"robot\" src= {`https://robohash.org/${id}?250*250`} />\r\n\t\t\t<h2>{username}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t\t<p>{id}</p>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default card;","import React from 'react';\r\nimport Card from './Card.js'\r\n//import { robots } from './Robots';\r\n\r\nconst CardArray = ({robots}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tid = {user.id}\r\n\t\t\t\t\t\t\tusername = {user.username}\r\n\t\t\t\t\t\t\temail = {user.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\nexport default CardArray;","import React from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchChange}) =>{\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t<input type=\"search\" placeholder=\"searchrobos\" className=\" shadow-2 bg-light-gray ba b--green\" \r\n\t\t\tonChange={searchChange}/>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default  Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style= {{overflow: 'scroll', border: '5px solid black', height: '800px'}} >\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardArray from './cardarray';\r\nimport { robots } from './Robots';\r\nimport Searchbox from './Searchbox';\r\n//import './App.css'\r\nimport Scroll from './Scroll.js'\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor (){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then( response => response.json())\r\n\t\t.then( users => this.setState({ robots: users}));\r\n}\r\n\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({ searchfield: event.target.value})\r\n\t//console.log(event.target.value);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n\tconst filteredrobots = this.state.robots.filter(robots =>{\r\n\treturn robots.username.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t})\r\n\treturn( \r\n\t\t<div className = \"tc\">\r\n\t\t\t<h1 >Robo APP</h1>\r\n\t\t\t<Searchbox searchChange = {this.onSearchChange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t\t<CardArray robots={filteredrobots} />\r\n\t\t\t</Scroll>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nimport App from './App'\n\n\n\n\nReactDOM.render( < App />,\n  document.getElementById('root')\n);\n\n/// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n"],"sourceRoot":""}